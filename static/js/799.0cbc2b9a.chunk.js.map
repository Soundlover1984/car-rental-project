{"version":3,"file":"static/js/799.0cbc2b9a.chunk.js","mappings":"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","sources":["../MediaQuery/webpack/universalModuleDefinition","../MediaQuery/node_modules/css-mediaquery/index.js","../MediaQuery/node_modules/hyphenate-style-name/index.js","../MediaQuery/node_modules/matchmediaquery/index.js","../MediaQuery/node_modules/object-assign/index.js","../MediaQuery/node_modules/prop-types/checkPropTypes.js","../MediaQuery/node_modules/prop-types/factoryWithTypeCheckers.js","../MediaQuery/node_modules/prop-types/index.js","../MediaQuery/node_modules/prop-types/lib/ReactPropTypesSecret.js","../MediaQuery/node_modules/prop-types/lib/has.js","../MediaQuery/node_modules/react-is/cjs/react-is.development.js","../MediaQuery/node_modules/react-is/index.js","../MediaQuery/node_modules/shallow-equal/dist/index.esm.js","../MediaQuery/src/Component.ts","../MediaQuery/src/Context.ts","../MediaQuery/src/index.ts","../MediaQuery/src/mediaQuery.ts","../MediaQuery/src/toQuery.ts","../MediaQuery/src/useMediaQuery.ts","../MediaQuery/external umd {\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\",\"root\":\"React\"}","../MediaQuery/webpack/bootstrap","../MediaQuery/webpack/runtime/define property getters","../MediaQuery/webpack/runtime/hasOwnProperty shorthand","../MediaQuery/webpack/runtime/make namespace object","../MediaQuery/webpack/startup","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediaQuery\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"MediaQuery\"] = factory(root[\"React\"]);\n})(this, (__WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n'use strict';\n\nexports.match = matchQuery;\nexports.parse = parseQuery;\n\n// -----------------------------------------------------------------------------\n\nvar RE_MEDIA_QUERY     = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\n    RE_MQ_EXPRESSION   = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\n    RE_MQ_FEATURE      = /^(?:(min|max)-)?(.+)/,\n    RE_LENGTH_UNIT     = /(em|rem|px|cm|mm|in|pt|pc)?$/,\n    RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;\n\nfunction matchQuery(mediaQuery, values) {\n    return parseQuery(mediaQuery).some(function (query) {\n        var inverse = query.inverse;\n\n        // Either the parsed or specified `type` is \"all\", or the types must be\n        // equal for a match.\n        var typeMatch = query.type === 'all' || values.type === query.type;\n\n        // Quit early when `type` doesn't match, but take \"not\" into account.\n        if ((typeMatch && inverse) || !(typeMatch || inverse)) {\n            return false;\n        }\n\n        var expressionsMatch = query.expressions.every(function (expression) {\n            var feature  = expression.feature,\n                modifier = expression.modifier,\n                expValue = expression.value,\n                value    = values[feature];\n\n            // Missing or falsy values don't match.\n            if (!value) { return false; }\n\n            switch (feature) {\n                case 'orientation':\n                case 'scan':\n                    return value.toLowerCase() === expValue.toLowerCase();\n\n                case 'width':\n                case 'height':\n                case 'device-width':\n                case 'device-height':\n                    expValue = toPx(expValue);\n                    value    = toPx(value);\n                    break;\n\n                case 'resolution':\n                    expValue = toDpi(expValue);\n                    value    = toDpi(value);\n                    break;\n\n                case 'aspect-ratio':\n                case 'device-aspect-ratio':\n                case /* Deprecated */ 'device-pixel-ratio':\n                    expValue = toDecimal(expValue);\n                    value    = toDecimal(value);\n                    break;\n\n                case 'grid':\n                case 'color':\n                case 'color-index':\n                case 'monochrome':\n                    expValue = parseInt(expValue, 10) || 1;\n                    value    = parseInt(value, 10) || 0;\n                    break;\n            }\n\n            switch (modifier) {\n                case 'min': return value >= expValue;\n                case 'max': return value <= expValue;\n                default   : return value === expValue;\n            }\n        });\n\n        return (expressionsMatch && !inverse) || (!expressionsMatch && inverse);\n    });\n}\n\nfunction parseQuery(mediaQuery) {\n    return mediaQuery.split(',').map(function (query) {\n        query = query.trim();\n\n        var captures    = query.match(RE_MEDIA_QUERY),\n            modifier    = captures[1],\n            type        = captures[2],\n            expressions = captures[3] || '',\n            parsed      = {};\n\n        parsed.inverse = !!modifier && modifier.toLowerCase() === 'not';\n        parsed.type    = type ? type.toLowerCase() : 'all';\n\n        // Split expressions into a list.\n        expressions = expressions.match(/\\([^\\)]+\\)/g) || [];\n\n        parsed.expressions = expressions.map(function (expression) {\n            var captures = expression.match(RE_MQ_EXPRESSION),\n                feature  = captures[1].toLowerCase().match(RE_MQ_FEATURE);\n\n            return {\n                modifier: feature[1],\n                feature : feature[2],\n                value   : captures[2]\n            };\n        });\n\n        return parsed;\n    });\n}\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction toDecimal(ratio) {\n    var decimal = Number(ratio),\n        numbers;\n\n    if (!decimal) {\n        numbers = ratio.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/);\n        decimal = numbers[1] / numbers[2];\n    }\n\n    return decimal;\n}\n\nfunction toDpi(resolution) {\n    var value = parseFloat(resolution),\n        units = String(resolution).match(RE_RESOLUTION_UNIT)[1];\n\n    switch (units) {\n        case 'dpcm': return value / 2.54;\n        case 'dppx': return value * 96;\n        default    : return value;\n    }\n}\n\nfunction toPx(length) {\n    var value = parseFloat(length),\n        units = String(length).match(RE_LENGTH_UNIT)[1];\n\n    switch (units) {\n        case 'em' : return value * 16;\n        case 'rem': return value * 16;\n        case 'cm' : return value * 96 / 2.54;\n        case 'mm' : return value * 96 / 2.54 / 10;\n        case 'in' : return value * 96;\n        case 'pt' : return value * 72;\n        case 'pc' : return value * 72 / 12;\n        default   : return value;\n    }\n}\n","/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g\nvar msPattern = /^ms-/\nvar cache = {}\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower)\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nexport default hyphenateStyleName\n","'use strict';\n\nvar staticMatch = require('css-mediaquery').match;\nvar dynamicMatch = typeof window !== 'undefined' ? window.matchMedia : null;\n\n// our fake MediaQueryList\nfunction Mql(query, values, forceStatic){\n  var self = this;\n  if(dynamicMatch && !forceStatic){\n    var mql = dynamicMatch.call(window, query);\n    this.matches = mql.matches;\n    this.media = mql.media;\n    // TODO: is there a time it makes sense to remove this listener?\n    mql.addListener(update);\n  } else {\n    this.matches = staticMatch(query, values);\n    this.media = query;\n  }\n\n  this.addListener = addListener;\n  this.removeListener = removeListener;\n  this.dispose = dispose;\n\n  function addListener(listener){\n    if(mql){\n      mql.addListener(listener);\n    }\n  }\n\n  function removeListener(listener){\n    if(mql){\n      mql.removeListener(listener);\n    }\n  }\n\n  // update ourselves!\n  function update(evt){\n    self.matches = evt.matches;\n    self.media = evt.media;\n  }\n\n  function dispose(){\n    if(mql){\n      mql.removeListener(update);\n    }\n  }\n}\n\nfunction matchMedia(query, values, forceStatic){\n  return new Mql(query, values, forceStatic);\n}\n\nmodule.exports = matchMedia;\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactIs = require('react-is');\nvar assign = require('object-assign');\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\nvar has = require('./lib/has');\nvar checkPropTypes = require('./checkPropTypes');\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  };\n}\n\nfunction emptyFunctionThatReturnsNull() {\n  return null;\n}\n\nmodule.exports = function(isValidElement, throwOnDirectAccess) {\n  /* global Symbol */\n  var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n  var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n  /**\n   * Returns the iterator method function contained on the iterable object.\n   *\n   * Be sure to invoke the function with the iterable as context:\n   *\n   *     var iteratorFn = getIteratorFn(myIterable);\n   *     if (iteratorFn) {\n   *       var iterator = iteratorFn.call(myIterable);\n   *       ...\n   *     }\n   *\n   * @param {?object} maybeIterable\n   * @return {?function}\n   */\n  function getIteratorFn(maybeIterable) {\n    var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n    if (typeof iteratorFn === 'function') {\n      return iteratorFn;\n    }\n  }\n\n  /**\n   * Collection of methods that allow declaration and validation of props that are\n   * supplied to React components. Example usage:\n   *\n   *   var Props = require('ReactPropTypes');\n   *   var MyArticle = React.createClass({\n   *     propTypes: {\n   *       // An optional string prop named \"description\".\n   *       description: Props.string,\n   *\n   *       // A required enum prop named \"category\".\n   *       category: Props.oneOf(['News','Photos']).isRequired,\n   *\n   *       // A prop named \"dialog\" that requires an instance of Dialog.\n   *       dialog: Props.instanceOf(Dialog).isRequired\n   *     },\n   *     render: function() { ... }\n   *   });\n   *\n   * A more formal specification of how these methods are used:\n   *\n   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n   *   decl := ReactPropTypes.{type}(.isRequired)?\n   *\n   * Each and every declaration produces a function with the same signature. This\n   * allows the creation of custom validation functions. For example:\n   *\n   *  var MyLink = React.createClass({\n   *    propTypes: {\n   *      // An optional string or URI prop named \"href\".\n   *      href: function(props, propName, componentName) {\n   *        var propValue = props[propName];\n   *        if (propValue != null && typeof propValue !== 'string' &&\n   *            !(propValue instanceof URI)) {\n   *          return new Error(\n   *            'Expected a string or an URI for ' + propName + ' in ' +\n   *            componentName\n   *          );\n   *        }\n   *      }\n   *    },\n   *    render: function() {...}\n   *  });\n   *\n   * @internal\n   */\n\n  var ANONYMOUS = '<<anonymous>>';\n\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n  var ReactPropTypes = {\n    array: createPrimitiveTypeChecker('array'),\n    bigint: createPrimitiveTypeChecker('bigint'),\n    bool: createPrimitiveTypeChecker('boolean'),\n    func: createPrimitiveTypeChecker('function'),\n    number: createPrimitiveTypeChecker('number'),\n    object: createPrimitiveTypeChecker('object'),\n    string: createPrimitiveTypeChecker('string'),\n    symbol: createPrimitiveTypeChecker('symbol'),\n\n    any: createAnyTypeChecker(),\n    arrayOf: createArrayOfTypeChecker,\n    element: createElementTypeChecker(),\n    elementType: createElementTypeTypeChecker(),\n    instanceOf: createInstanceTypeChecker,\n    node: createNodeChecker(),\n    objectOf: createObjectOfTypeChecker,\n    oneOf: createEnumTypeChecker,\n    oneOfType: createUnionTypeChecker,\n    shape: createShapeTypeChecker,\n    exact: createStrictShapeTypeChecker,\n  };\n\n  /**\n   * inlined Object.is polyfill to avoid requiring consumers ship their own\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   */\n  /*eslint-disable no-self-compare*/\n  function is(x, y) {\n    // SameValue algorithm\n    if (x === y) {\n      // Steps 1-5, 7-10\n      // Steps 6.b-6.e: +0 != -0\n      return x !== 0 || 1 / x === 1 / y;\n    } else {\n      // Step 6.a: NaN == NaN\n      return x !== x && y !== y;\n    }\n  }\n  /*eslint-enable no-self-compare*/\n\n  /**\n   * We use an Error-like object for backward compatibility as people may call\n   * PropTypes directly and inspect their output. However, we don't use real\n   * Errors anymore. We don't inspect their stack anyway, and creating them\n   * is prohibitively expensive if they are created too often, such as what\n   * happens in oneOfType() for any type before the one that matched.\n   */\n  function PropTypeError(message, data) {\n    this.message = message;\n    this.data = data && typeof data === 'object' ? data: {};\n    this.stack = '';\n  }\n  // Make `instanceof Error` still work for returned errors.\n  PropTypeError.prototype = Error.prototype;\n\n  function createChainableTypeChecker(validate) {\n    if (process.env.NODE_ENV !== 'production') {\n      var manualPropTypeCallCache = {};\n      var manualPropTypeWarningCount = 0;\n    }\n    function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n      componentName = componentName || ANONYMOUS;\n      propFullName = propFullName || propName;\n\n      if (secret !== ReactPropTypesSecret) {\n        if (throwOnDirectAccess) {\n          // New behavior only for users of `prop-types` package\n          var err = new Error(\n            'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n            'Use `PropTypes.checkPropTypes()` to call them. ' +\n            'Read more at http://fb.me/use-check-prop-types'\n          );\n          err.name = 'Invariant Violation';\n          throw err;\n        } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n          // Old behavior for people using React.PropTypes\n          var cacheKey = componentName + ':' + propName;\n          if (\n            !manualPropTypeCallCache[cacheKey] &&\n            // Avoid spamming the console because they are often not actionable except for lib authors\n            manualPropTypeWarningCount < 3\n          ) {\n            printWarning(\n              'You are manually calling a React.PropTypes validation ' +\n              'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' +\n              'and will throw in the standalone `prop-types` package. ' +\n              'You may be seeing this warning due to a third-party PropTypes ' +\n              'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'\n            );\n            manualPropTypeCallCache[cacheKey] = true;\n            manualPropTypeWarningCount++;\n          }\n        }\n      }\n      if (props[propName] == null) {\n        if (isRequired) {\n          if (props[propName] === null) {\n            return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n          }\n          return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n        }\n        return null;\n      } else {\n        return validate(props, propName, componentName, location, propFullName);\n      }\n    }\n\n    var chainedCheckType = checkType.bind(null, false);\n    chainedCheckType.isRequired = checkType.bind(null, true);\n\n    return chainedCheckType;\n  }\n\n  function createPrimitiveTypeChecker(expectedType) {\n    function validate(props, propName, componentName, location, propFullName, secret) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== expectedType) {\n        // `propValue` being instance of, say, date/regexp, pass the 'object'\n        // check, but we can offer a more precise error message here rather than\n        // 'of type `object`'.\n        var preciseType = getPreciseType(propValue);\n\n        return new PropTypeError(\n          'Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'),\n          {expectedType: expectedType}\n        );\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createAnyTypeChecker() {\n    return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n  }\n\n  function createArrayOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n      }\n      var propValue = props[propName];\n      if (!Array.isArray(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n      }\n      for (var i = 0; i < propValue.length; i++) {\n        var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n        if (error instanceof Error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!isValidElement(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createElementTypeTypeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      if (!ReactIs.isValidElementType(propValue)) {\n        var propType = getPropType(propValue);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createInstanceTypeChecker(expectedClass) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!(props[propName] instanceof expectedClass)) {\n        var expectedClassName = expectedClass.name || ANONYMOUS;\n        var actualClassName = getClassName(props[propName]);\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createEnumTypeChecker(expectedValues) {\n    if (!Array.isArray(expectedValues)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (arguments.length > 1) {\n          printWarning(\n            'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +\n            'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'\n          );\n        } else {\n          printWarning('Invalid argument supplied to oneOf, expected an array.');\n        }\n      }\n      return emptyFunctionThatReturnsNull;\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      for (var i = 0; i < expectedValues.length; i++) {\n        if (is(propValue, expectedValues[i])) {\n          return null;\n        }\n      }\n\n      var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n        var type = getPreciseType(value);\n        if (type === 'symbol') {\n          return String(value);\n        }\n        return value;\n      });\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createObjectOfTypeChecker(typeChecker) {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (typeof typeChecker !== 'function') {\n        return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n      }\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n      }\n      for (var key in propValue) {\n        if (has(propValue, key)) {\n          var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n          if (error instanceof Error) {\n            return error;\n          }\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createUnionTypeChecker(arrayOfTypeCheckers) {\n    if (!Array.isArray(arrayOfTypeCheckers)) {\n      process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n      return emptyFunctionThatReturnsNull;\n    }\n\n    for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n      var checker = arrayOfTypeCheckers[i];\n      if (typeof checker !== 'function') {\n        printWarning(\n          'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +\n          'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'\n        );\n        return emptyFunctionThatReturnsNull;\n      }\n    }\n\n    function validate(props, propName, componentName, location, propFullName) {\n      var expectedTypes = [];\n      for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n        var checker = arrayOfTypeCheckers[i];\n        var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n        if (checkerResult == null) {\n          return null;\n        }\n        if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n          expectedTypes.push(checkerResult.data.expectedType);\n        }\n      }\n      var expectedTypesMessage = (expectedTypes.length > 0) ? ', expected one of type [' + expectedTypes.join(', ') + ']': '';\n      return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createNodeChecker() {\n    function validate(props, propName, componentName, location, propFullName) {\n      if (!isNode(props[propName])) {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function invalidValidatorError(componentName, location, propFullName, key, type) {\n    return new PropTypeError(\n      (componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' +\n      'it must be a function, usually from the `prop-types` package, but received `' + type + '`.'\n    );\n  }\n\n  function createShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      for (var key in shapeTypes) {\n        var checker = shapeTypes[key];\n        if (typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n    return createChainableTypeChecker(validate);\n  }\n\n  function createStrictShapeTypeChecker(shapeTypes) {\n    function validate(props, propName, componentName, location, propFullName) {\n      var propValue = props[propName];\n      var propType = getPropType(propValue);\n      if (propType !== 'object') {\n        return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n      }\n      // We need to check all keys in case some are required but missing from props.\n      var allKeys = assign({}, props[propName], shapeTypes);\n      for (var key in allKeys) {\n        var checker = shapeTypes[key];\n        if (has(shapeTypes, key) && typeof checker !== 'function') {\n          return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n        }\n        if (!checker) {\n          return new PropTypeError(\n            'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +\n            '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  ')\n          );\n        }\n        var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n        if (error) {\n          return error;\n        }\n      }\n      return null;\n    }\n\n    return createChainableTypeChecker(validate);\n  }\n\n  function isNode(propValue) {\n    switch (typeof propValue) {\n      case 'number':\n      case 'string':\n      case 'undefined':\n        return true;\n      case 'boolean':\n        return !propValue;\n      case 'object':\n        if (Array.isArray(propValue)) {\n          return propValue.every(isNode);\n        }\n        if (propValue === null || isValidElement(propValue)) {\n          return true;\n        }\n\n        var iteratorFn = getIteratorFn(propValue);\n        if (iteratorFn) {\n          var iterator = iteratorFn.call(propValue);\n          var step;\n          if (iteratorFn !== propValue.entries) {\n            while (!(step = iterator.next()).done) {\n              if (!isNode(step.value)) {\n                return false;\n              }\n            }\n          } else {\n            // Iterator will provide entry [k,v] tuples rather than values.\n            while (!(step = iterator.next()).done) {\n              var entry = step.value;\n              if (entry) {\n                if (!isNode(entry[1])) {\n                  return false;\n                }\n              }\n            }\n          }\n        } else {\n          return false;\n        }\n\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  function isSymbol(propType, propValue) {\n    // Native Symbol.\n    if (propType === 'symbol') {\n      return true;\n    }\n\n    // falsy value can't be a Symbol\n    if (!propValue) {\n      return false;\n    }\n\n    // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n    if (propValue['@@toStringTag'] === 'Symbol') {\n      return true;\n    }\n\n    // Fallback for non-spec compliant Symbols which are polyfilled.\n    if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n      return true;\n    }\n\n    return false;\n  }\n\n  // Equivalent of `typeof` but with special handling for array and regexp.\n  function getPropType(propValue) {\n    var propType = typeof propValue;\n    if (Array.isArray(propValue)) {\n      return 'array';\n    }\n    if (propValue instanceof RegExp) {\n      // Old webkits (at least until Android 4.0) return 'function' rather than\n      // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n      // passes PropTypes.object.\n      return 'object';\n    }\n    if (isSymbol(propType, propValue)) {\n      return 'symbol';\n    }\n    return propType;\n  }\n\n  // This handles more types than `getPropType`. Only used for error messages.\n  // See `createPrimitiveTypeChecker`.\n  function getPreciseType(propValue) {\n    if (typeof propValue === 'undefined' || propValue === null) {\n      return '' + propValue;\n    }\n    var propType = getPropType(propValue);\n    if (propType === 'object') {\n      if (propValue instanceof Date) {\n        return 'date';\n      } else if (propValue instanceof RegExp) {\n        return 'regexp';\n      }\n    }\n    return propType;\n  }\n\n  // Returns a string that is postfixed to a warning about an invalid type.\n  // For example, \"undefined\" or \"of type array\"\n  function getPostfixForTypeWarning(value) {\n    var type = getPreciseType(value);\n    switch (type) {\n      case 'array':\n      case 'object':\n        return 'an ' + type;\n      case 'boolean':\n      case 'date':\n      case 'regexp':\n        return 'a ' + type;\n      default:\n        return type;\n    }\n  }\n\n  // Returns class name of the object, if any.\n  function getClassName(propValue) {\n    if (!propValue.constructor || !propValue.constructor.name) {\n      return ANONYMOUS;\n    }\n    return propValue.constructor.name;\n  }\n\n  ReactPropTypes.checkPropTypes = checkPropTypes;\n  ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = Function.call.bind(Object.prototype.hasOwnProperty);\n","/** @license React v16.13.1\n * react-is.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n\n\nif (process.env.NODE_ENV !== \"production\") {\n  (function() {\n'use strict';\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n// (unstable) APIs that have been removed. Can we remove the symbols?\n\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n\nfunction isValidElementType(type) {\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n}\n\nfunction typeOf(object) {\n  if (typeof object === 'object' && object !== null) {\n    var $$typeof = object.$$typeof;\n\n    switch ($$typeof) {\n      case REACT_ELEMENT_TYPE:\n        var type = object.type;\n\n        switch (type) {\n          case REACT_ASYNC_MODE_TYPE:\n          case REACT_CONCURRENT_MODE_TYPE:\n          case REACT_FRAGMENT_TYPE:\n          case REACT_PROFILER_TYPE:\n          case REACT_STRICT_MODE_TYPE:\n          case REACT_SUSPENSE_TYPE:\n            return type;\n\n          default:\n            var $$typeofType = type && type.$$typeof;\n\n            switch ($$typeofType) {\n              case REACT_CONTEXT_TYPE:\n              case REACT_FORWARD_REF_TYPE:\n              case REACT_LAZY_TYPE:\n              case REACT_MEMO_TYPE:\n              case REACT_PROVIDER_TYPE:\n                return $$typeofType;\n\n              default:\n                return $$typeof;\n            }\n\n        }\n\n      case REACT_PORTAL_TYPE:\n        return $$typeof;\n    }\n  }\n\n  return undefined;\n} // AsyncMode is deprecated along with isAsyncMode\n\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\nvar ContextConsumer = REACT_CONTEXT_TYPE;\nvar ContextProvider = REACT_PROVIDER_TYPE;\nvar Element = REACT_ELEMENT_TYPE;\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\nvar Fragment = REACT_FRAGMENT_TYPE;\nvar Lazy = REACT_LAZY_TYPE;\nvar Memo = REACT_MEMO_TYPE;\nvar Portal = REACT_PORTAL_TYPE;\nvar Profiler = REACT_PROFILER_TYPE;\nvar StrictMode = REACT_STRICT_MODE_TYPE;\nvar Suspense = REACT_SUSPENSE_TYPE;\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\nfunction isAsyncMode(object) {\n  {\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n    }\n  }\n\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n}\nfunction isConcurrentMode(object) {\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n}\nfunction isContextConsumer(object) {\n  return typeOf(object) === REACT_CONTEXT_TYPE;\n}\nfunction isContextProvider(object) {\n  return typeOf(object) === REACT_PROVIDER_TYPE;\n}\nfunction isElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nfunction isForwardRef(object) {\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\n}\nfunction isFragment(object) {\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\n}\nfunction isLazy(object) {\n  return typeOf(object) === REACT_LAZY_TYPE;\n}\nfunction isMemo(object) {\n  return typeOf(object) === REACT_MEMO_TYPE;\n}\nfunction isPortal(object) {\n  return typeOf(object) === REACT_PORTAL_TYPE;\n}\nfunction isProfiler(object) {\n  return typeOf(object) === REACT_PROFILER_TYPE;\n}\nfunction isStrictMode(object) {\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\n}\nfunction isSuspense(object) {\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\n}\n\nexports.AsyncMode = AsyncMode;\nexports.ConcurrentMode = ConcurrentMode;\nexports.ContextConsumer = ContextConsumer;\nexports.ContextProvider = ContextProvider;\nexports.Element = Element;\nexports.ForwardRef = ForwardRef;\nexports.Fragment = Fragment;\nexports.Lazy = Lazy;\nexports.Memo = Memo;\nexports.Portal = Portal;\nexports.Profiler = Profiler;\nexports.StrictMode = StrictMode;\nexports.Suspense = Suspense;\nexports.isAsyncMode = isAsyncMode;\nexports.isConcurrentMode = isConcurrentMode;\nexports.isContextConsumer = isContextConsumer;\nexports.isContextProvider = isContextProvider;\nexports.isElement = isElement;\nexports.isForwardRef = isForwardRef;\nexports.isFragment = isFragment;\nexports.isLazy = isLazy;\nexports.isMemo = isMemo;\nexports.isPortal = isPortal;\nexports.isProfiler = isProfiler;\nexports.isStrictMode = isStrictMode;\nexports.isSuspense = isSuspense;\nexports.isValidElementType = isValidElementType;\nexports.typeOf = typeOf;\n  })();\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","function shallowEqualObjects(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  var aKeys = Object.keys(objA);\n  var bKeys = Object.keys(objB);\n  var len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    var key = aKeys[i];\n\n    if (objA[key] !== objB[key] || !Object.prototype.hasOwnProperty.call(objB, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction shallowEqualArrays(arrA, arrB) {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  var len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (var i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport { shallowEqualArrays, shallowEqualObjects };\n","import useMediaQuery from './useMediaQuery';\nimport { ReactNode, ReactElement, FC, CSSProperties } from 'react';\nimport { MediaQueryAllQueryable, MediaQueryMatchers } from './types';\n\ninterface MediaQueryProps extends MediaQueryAllQueryable {\n  component?: ReactNode\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  children?: ReactNode | ((matches: boolean) => ReactNode);\n  query?: string;\n  style?: CSSProperties;\n  className?: string;\n  device?: MediaQueryMatchers;\n  values?: Partial<MediaQueryMatchers>;\n  onBeforeChange?: (_matches: boolean) => void;\n  onChange?: (_matches: boolean) => void;\n}\n\n// ReactNode and ReactElement typings are a little funky for functional components, so the ReactElement cast is needed on the return\nconst MediaQuery: FC<MediaQueryProps> = ({\n  children,\n  device,\n  onChange,\n  ...settings\n}) => {\n  const matches = useMediaQuery(settings, device, onChange);\n\n  if (typeof children === 'function') {\n    return children(matches) as ReactElement;\n  }\n  return matches ? children as ReactElement : null;\n};\n\nexport default MediaQuery;\n","import { createContext } from 'react'\nimport { MediaQueryAllQueryable } from './types'\n\nconst Context = createContext<Partial<MediaQueryAllQueryable> | undefined>(undefined)\n\nexport default Context\n","import useMediaQuery from './useMediaQuery'\nimport MediaQuery from './Component'\nimport toQuery from './toQuery'\nimport Context from './Context'\n\nexport {\n  MediaQuery as default,\n  useMediaQuery,\n  toQuery,\n  Context\n}\n\nexport type {\n  MediaQueryTypes,\n  MediaQueryType,\n  MediaQueryFeatures,\n  MediaQueryMatchers,\n  MediaQueryAllQueryable\n} from './types'\n","import PropTypes from 'prop-types'\n\nconst stringOrNumber = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.number\n])\n\n// media types\nconst types = {\n  all: PropTypes.bool,\n  grid: PropTypes.bool,\n  aural: PropTypes.bool,\n  braille: PropTypes.bool,\n  handheld: PropTypes.bool,\n  print: PropTypes.bool,\n  projection: PropTypes.bool,\n  screen: PropTypes.bool,\n  tty: PropTypes.bool,\n  tv: PropTypes.bool,\n  embossed: PropTypes.bool\n}\n\n// properties that match media queries\nconst matchers = {\n  orientation: PropTypes.oneOf([\n    'portrait',\n    'landscape'\n  ]),\n\n  scan: PropTypes.oneOf([\n    'progressive',\n    'interlace'\n  ]),\n\n  aspectRatio: PropTypes.string,\n  deviceAspectRatio: PropTypes.string,\n\n  height: stringOrNumber,\n  deviceHeight: stringOrNumber,\n\n  width: stringOrNumber,\n  deviceWidth: stringOrNumber,\n\n  color: PropTypes.bool,\n\n  colorIndex: PropTypes.bool,\n\n  monochrome: PropTypes.bool,\n  resolution: stringOrNumber,\n  type: Object.keys(types)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst { type, ...featureMatchers } = matchers\n\n// media features\nconst features = {\n  minAspectRatio: PropTypes.string,\n  maxAspectRatio: PropTypes.string,\n  minDeviceAspectRatio: PropTypes.string,\n  maxDeviceAspectRatio: PropTypes.string,\n\n  minHeight: stringOrNumber,\n  maxHeight: stringOrNumber,\n  minDeviceHeight: stringOrNumber,\n  maxDeviceHeight: stringOrNumber,\n\n  minWidth: stringOrNumber,\n  maxWidth: stringOrNumber,\n  minDeviceWidth: stringOrNumber,\n  maxDeviceWidth: stringOrNumber,\n\n  minColor: PropTypes.number,\n  maxColor: PropTypes.number,\n\n  minColorIndex: PropTypes.number,\n  maxColorIndex: PropTypes.number,\n\n  minMonochrome: PropTypes.number,\n  maxMonochrome: PropTypes.number,\n\n  minResolution: stringOrNumber,\n  maxResolution: stringOrNumber,\n\n  ...featureMatchers\n}\n\nconst all = { ...types, ...features }\n\nexport default {\n  all: all,\n  types: types,\n  matchers: matchers,\n  features: features\n}\n","import hyphenate from 'hyphenate-style-name'\nimport mq from './mediaQuery'\nimport { MediaQueryAllQueryable } from './types'\n\nconst negate = (cond: string) => `not ${cond}`\n\nconst keyVal = (k: string, v: unknown): string => {\n  const realKey = hyphenate(k)\n\n  // px shorthand\n  if (typeof v === 'number') {\n    v = `${v}px`\n  }\n  if (v === true) {\n    return realKey\n  }\n  if (v === false) {\n    return negate(realKey)\n  }\n  return `(${realKey}: ${v})`\n}\n\nconst join = (conds: string[]): string => conds.join(' and ')\n\nconst toQuery = (obj: Partial<MediaQueryAllQueryable>): string => {\n  const rules: string[] = []\n  Object.keys(mq.all).forEach((k) => {\n    const v = obj[k as keyof MediaQueryAllQueryable]\n    if (v != null) {\n      rules.push(keyVal(k, v))\n    }\n  })\n  return join(rules)\n}\n\nexport default toQuery\n","import { useRef, useEffect, useContext, useState } from 'react'\nimport matchMedia from 'matchmediaquery'\nimport hyphenate from 'hyphenate-style-name'\nimport { shallowEqualObjects } from 'shallow-equal'\nimport toQuery from './toQuery'\nimport Context from './Context'\nimport { MediaQueryAllQueryable, MediaQueryMatchers } from './types'\n\ntype MediaQuerySettings = Partial<MediaQueryAllQueryable & { query?: string }>\ntype HyphenateKeyTypes = MediaQueryMatchers | MediaQueryAllQueryable;\n\nconst makeQuery = (settings: MediaQuerySettings) => settings.query || toQuery(settings)\n\nconst hyphenateKeys = (obj?: HyphenateKeyTypes)  => {\n  type K = keyof HyphenateKeyTypes;\n\n  if (!obj) return undefined\n  const keys = Object.keys(obj) as K[]\n\n  return keys.reduce((result, key) => {\n    result[hyphenate(key)] = obj[key]\n    return result\n  }, {} as Record<string, typeof obj[K]>)\n}\n\nconst useIsUpdate = () => {\n  const ref = useRef(false)\n\n  useEffect(() => {\n    ref.current = true\n  }, [])\n\n  return ref.current\n}\n\nconst useDevice = (deviceFromProps?: MediaQueryMatchers): Partial<MediaQueryAllQueryable> | undefined => {\n  const deviceFromContext = useContext(Context)\n  const getDevice = () =>\n    hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext)\n  const [ device, setDevice ] = useState(getDevice)\n\n  useEffect(() => {\n    const newDevice = getDevice()\n    if (!shallowEqualObjects(device, newDevice)) {\n      setDevice(newDevice)\n    }\n  }, [ deviceFromProps, deviceFromContext ])\n\n  return device\n}\n\nconst useQuery = (settings: MediaQuerySettings) => {\n  const getQuery = () => makeQuery(settings)\n  const [ query, setQuery ] = useState(getQuery)\n\n  useEffect(() => {\n    const newQuery = getQuery()\n    if (query !== newQuery) {\n      setQuery(newQuery)\n    }\n  }, [ settings ])\n\n  return query\n}\n\nconst useMatchMedia = (query: string, device?: MediaQueryMatchers) => {\n  const getMatchMedia = () => matchMedia(query, device || {}, !!device)\n  const [ mq, setMq ] = useState(getMatchMedia)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate) {\n      // skip on mounting, it has already been set\n      const newMq = getMatchMedia()\n      setMq(newMq)\n\n      return () => {\n        if (newMq) {\n          newMq.dispose()\n        }\n      }\n    }\n  }, [ query, device ])\n\n  return mq\n}\n\nconst useMatches = (mediaQuery: MediaQueryList): boolean => {\n  const [ matches, setMatches ] = useState<boolean>(mediaQuery.matches)\n\n  useEffect(() => {\n    const updateMatches = (ev: MediaQueryListEvent) => {\n      setMatches(ev.matches)\n    }\n    mediaQuery.addListener(updateMatches)\n    setMatches(mediaQuery.matches)\n\n    return () => {\n      mediaQuery.removeListener(updateMatches)\n    }\n  }, [ mediaQuery ])\n\n  return matches\n}\n\nconst useMediaQuery = (settings: MediaQuerySettings, device?: MediaQueryMatchers, onChange?: (_: boolean) => void) => {\n  const deviceSettings = useDevice(device)\n  const query = useQuery(settings)\n  if (!query) throw new Error('Invalid or missing MediaQuery!')\n  const mq = useMatchMedia(query, deviceSettings)\n  const matches = useMatches(mq as unknown as MediaQueryList)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate && onChange) {\n      onChange(matches)\n    }\n  }, [ matches ])\n\n  useEffect(() => () => {\n    if (mq) {\n      mq.dispose()\n    }\n  }, [])\n\n  return matches\n}\n\nexport default useMediaQuery\n","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const canHandoff = useRef(Boolean(window.HandoffAppearAnimations));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!canHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        /**\n         * Once we've handed off animations we can delete HandoffAppearAnimations\n         * so components added after the initial render can animate changes\n         * in useEffect vs useLayoutEffect.\n         */\n        window.HandoffAppearAnimations = false;\n        canHandoff.current = false;\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frameData, frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    /**\n     * WAAPI animations don't resolve startTime synchronously. But a blocked\n     * thread could delay the startTime resolution by a noticeable amount.\n     * For synching handoff animations with the new Motion animation we want\n     * to ensure startTime is synchronously set.\n     */\n    if (options.syncStart) {\n        animation.startTime = frameData.isProcessing\n            ? frameData.timestamp\n            : document.timeline\n                ? document.timeline.currentTime\n                : performance.now();\n    }\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.16.8\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...transition,\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                valueTransition.syncStart = true;\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.16.8\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.16.8 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","const noop = (any) => any;\n\nexport { noop };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n"],"names":["factory","__WEBPACK_EXTERNAL_MODULE_react__","exports","match","mediaQuery","values","parseQuery","some","query","inverse","typeMatch","type","expressionsMatch","expressions","every","expression","feature","modifier","expValue","value","toLowerCase","toPx","toDpi","toDecimal","parseInt","parse","RE_MEDIA_QUERY","RE_MQ_EXPRESSION","RE_MQ_FEATURE","RE_LENGTH_UNIT","RE_RESOLUTION_UNIT","split","map","captures","trim","parsed","ratio","numbers","decimal","Number","resolution","parseFloat","String","length","uppercasePattern","msPattern","cache","toHyphenLower","__WEBPACK_DEFAULT_EXPORT__","name","hasOwnProperty","hName","replace","test","staticMatch","__webpack_require__","dynamicMatch","window","matchMedia","Mql","forceStatic","self","mql","call","matches","media","addListener","update","evt","listener","removeListener","dispose","module","getOwnPropertySymbols","Object","prototype","propIsEnumerable","propertyIsEnumerable","assign","test1","getOwnPropertyNames","test2","i","fromCharCode","n","join","test3","forEach","letter","keys","err","shouldUseNative","target","source","from","symbols","to","val","undefined","TypeError","toObject","s","arguments","key","printWarning","ReactPropTypesSecret","loggedTypeFailures","has","checkPropTypes","typeSpecs","location","componentName","getStack","typeSpecName","error","Error","ex","message","stack","text","console","x","resetWarningCache","ReactIs","emptyFunctionThatReturnsNull","isValidElement","throwOnDirectAccess","ITERATOR_SYMBOL","Symbol","iterator","FAUX_ITERATOR_SYMBOL","ANONYMOUS","ReactPropTypes","array","createPrimitiveTypeChecker","bigint","bool","func","number","object","string","symbol","any","createChainableTypeChecker","arrayOf","typeChecker","props","propName","propFullName","PropTypeError","propValue","Array","isArray","getPropType","element","elementType","isValidElementType","instanceOf","expectedClass","expectedClassName","constructor","node","isNode","objectOf","propType","oneOf","expectedValues","is","valuesString","JSON","stringify","getPreciseType","oneOfType","arrayOfTypeCheckers","checker","getPostfixForTypeWarning","expectedTypes","checkerResult","data","push","expectedType","shape","shapeTypes","invalidValidatorError","exact","allKeys","y","validate","manualPropTypeCallCache","manualPropTypeWarningCount","checkType","isRequired","secret","cacheKey","chainedCheckType","bind","iteratorFn","maybeIterable","getIteratorFn","step","entries","next","done","entry","RegExp","isSymbol","Date","PropTypes","isElement","Function","hasSymbol","for","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_ASYNC_MODE_TYPE","REACT_CONCURRENT_MODE_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_BLOCK_TYPE","REACT_FUNDAMENTAL_TYPE","REACT_RESPONDER_TYPE","REACT_SCOPE_TYPE","typeOf","$$typeof","$$typeofType","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","hasWarnedAboutDeprecatedIsAsyncMode","isConcurrentMode","isAsyncMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","shallowEqualObjects","objA","objB","aKeys","bKeys","len","shallowEqualArrays","arrA","arrB","useMediaQuery_1","__importDefault","_a","children","device","onChange","settings","__rest","default","Context","createContext","useMediaQuery","Component_1","toQuery_1","toQuery","Context_1","prop_types_1","stringOrNumber","types","all","grid","aural","braille","handheld","print","projection","screen","tty","tv","embossed","matchers","orientation","scan","aspectRatio","deviceAspectRatio","height","deviceHeight","width","deviceWidth","color","colorIndex","monochrome","featureMatchers","features","__assign","minAspectRatio","maxAspectRatio","minDeviceAspectRatio","maxDeviceAspectRatio","minHeight","maxHeight","minDeviceHeight","maxDeviceHeight","minWidth","maxWidth","minDeviceWidth","maxDeviceWidth","minColor","maxColor","minColorIndex","maxColorIndex","minMonochrome","maxMonochrome","minResolution","maxResolution","hyphenate_style_name_1","mediaQuery_1","obj","rules","k","v","realKey","concat","keyVal","react_1","matchmediaquery_1","shallow_equal_1","hyphenateKeys","reduce","result","useIsUpdate","ref","useRef","useEffect","current","useQuery","getQuery","makeQuery","useState","setQuery","newQuery","deviceSettings","deviceFromProps","deviceFromContext","useContext","getDevice","setDevice","newDevice","useDevice","mq","getMatchMedia","setMq","isUpdate","newMq_1","useMatchMedia","setMatches","updateMatches","ev","useMatches","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","d","definition","o","defineProperty","enumerable","get","prop","r","toStringTag","require","LayoutGroupContext","PresenceContext","Queue","this","order","scheduled","Set","add","process","remove","index","indexOf","splice","delete","clear","stepsOrder","schedule","frame","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","acc","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","callback","addToCurrentFrame","queue","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","keepAlive","immediate","createRenderBatcher","requestAnimationFrame","noop","MotionConfigContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","LazyContext","strict","isRefObject","isVariantLabel","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","animate","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","isBrowser","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","canHandoff","HandoffAppearAnimations","useIsomorphicLayoutEffect","render","animationState","animateChanges","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","id","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","_target","set","lowercaseSVGElements","isSVGComponent","includes","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","transform","clamp","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","enableHardwareAcceleration","allowTransformNone","transformString","transformName","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","calcOrigin","origin","offset","dashKeys","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","renderHTML","styleProp","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","charAt","toUpperCase","substring","resolveVariantFromProps","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","isMounted","addHoverEvent","isActive","callbackName","handleEvent","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","fireAllObserverCallbacks","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","super","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endPointerPress","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","handleBlur","removePointerListener","removeFocusListener","onFocus","isFocusVisible","onBlur","shallowCompare","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","cubicBezierAsString","c","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","invariant","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","g","hsla","hue","saturation","lightness","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","warning","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","bounce","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","syncStart","timeline","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","React__default","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","_ref12","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","motionMediaQuery","setReducedMotionPreferences","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","FeatureConstructor","MeasureLayoutComponent","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","createDomVisualElement","motion","createDomMotionConfig","useLayoutEffect"],"sourceRoot":""}